{
	"name": "ProductdatabasetogoldSalesOrder",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "Datalake",
						"type": "LinkedServiceReference"
					},
					"name": "sourceSilver"
				},
				{
					"linkedService": {
						"referenceName": "Datalake",
						"type": "LinkedServiceReference"
					},
					"name": "sinkFilesource"
				},
				{
					"linkedService": {
						"referenceName": "Datalake",
						"type": "LinkedServiceReference"
					},
					"name": "sinkpurchaseAddress"
				},
				{
					"linkedService": {
						"referenceName": "Datalake",
						"type": "LinkedServiceReference"
					},
					"name": "sinkProduct"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "joinFileSource"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          Product as string,",
				"          QuantityOrdered as integer,",
				"          PriceEach as double,",
				"          OrderDate as timestamp,",
				"          PurchaseStreet as string,",
				"          Purchasecity as string,",
				"          PurchaseState as string,",
				"          PurchaseZipcode as string,",
				"          Filename as string,",
				"          LoadDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'datalake',",
				"     wildcardPaths:['Silver/ProductDatabase/']) ~> sourceSilver",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'datalake',",
				"     wildcardPaths:['Gold/ProductDatabase/Filestore']) ~> sinkFilesource",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'datalake',",
				"     wildcardPaths:['Gold/ProductDatabase/PurchaseAddress/']) ~> sinkpurchaseAddress",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'datalake',",
				"     wildcardPaths:['Gold/ProductDatabase/Product/']) ~> sinkProduct",
				"sourceSilver, sinkFilesource join(Filename == ERROR_FUNCTION(''),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinFileSource"
			]
		}
	}
}